// Generated by CoffeeScript 1.4.0
(function() {
  var Identity, Singleton, crypto, generate_identity,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  crypto = require('crypto');

  Singleton = require('./singleton');

  /**
   * Generates a new identity.
   * @param {Integer} (length) The length of the identity bytestring
   * @return {String} The randombyte hex string
  */


  generate_identity = function(length) {
    if (length == null) {
      length = 8;
    }
    return crypto.randomBytes(length).toString('hex');
  };

  /**
   * A singleton for generating an identity
  */


  Identity = (function(_super) {

    __extends(Identity, _super);

    function Identity() {
      this.id = generate_identity();
      return this.id;
    }

    return Identity;

  })(Singleton);

  module.exports = {
    generate_identity: generate_identity,
    Identity: Identity
  };

}).call(this);
